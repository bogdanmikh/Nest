<root>

    <shaders>
        <vertex>
            #version 300 es
            layout (location = 0) in vec3 aPos;
            layout (location = 1) in vec2 aTexCoord;
            layout (location = 2) in vec3 aNormal;

            uniform mat4 model;
            uniform mat4 projViewMtx;

            out vec2 TexCoord;
            out vec3 Normal;
            out vec3 Position;

            void main() {
            vec4 pos = projViewMtx * model * vec4(aPos, 1.0);
            gl_Position = pos;
            TexCoord = aTexCoord;
            Normal = mat3(transpose(inverse(model))) * aNormal;
            Position = vec3(model * vec4(aPos, 1.0));
            }
        </vertex>

        <fragment>
            #version 300 es
            precision mediump float;

            in vec2 TexCoord;
            in vec3 Normal;
            in vec3 Position;

            uniform vec4 iTimeVec4;
            uniform vec4 iResolutionVec4;
            uniform vec4 iMouseVec4;
            uniform vec4 iCameraPosVec4;

            uniform sampler2D iTexture;
            uniform samplerCube iSky;

            out vec4 fragColor;

            void main() {
            float iTime = iTimeVec4.x;
            vec2 iResolution = iResolutionVec4.xy;
            vec2 iMouse = iMouseVec4.xy;
            vec3 cameraPos = iCameraPosVec4.xyz;

            vec2 st = gl_FragCoord.xy / iResolution;
            vec3 I = normalize(Position - cameraPos);
            vec3 R = reflect(I, normalize(Normal));
            vec3 color = texture(iTexture, TexCoord).rgb;
            // vec3 color = mix(texture(iTexture, TexCoord).rgb, texture(iSky, R).rgb, metallic);
            fragColor = vec4(color, 1.0);
            }
        </fragment>
    </shaders>

</root>